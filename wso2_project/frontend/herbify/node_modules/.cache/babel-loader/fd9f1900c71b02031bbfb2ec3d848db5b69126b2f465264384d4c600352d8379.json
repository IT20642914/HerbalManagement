{"ast":null,"code":"var _jsxFileName = \"C:\\\\3.2\\\\projects\\\\HerbalManagement\\\\wso2_project\\\\frontend\\\\herbify\\\\src\\\\pages\\\\product\\\\productsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useNavigate } from \"react-router\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport swal from \"sweetalert\";\nimport { connect } from \"react-redux\";\nimport MasterAPI from \"../../utill/Api\";\nimport { cart_data_success } from '../../redux';\nimport { PRODUCT_LIST } from '../../utill/AppConstant';\nimport store from \"../../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n\n  cardContent: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gridGap: \"10px\"\n  }\n}));\nfunction Index(_ref) {\n  _s();\n  let {\n    oldProducts,\n    fetch_cart_data_success\n  } = _ref;\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [products, setProducts] = useState(oldProducts ? oldProducts : []);\n  useEffect(() => {\n    if (!oldProducts) {\n      // MasterAPI()\n      //   .get(\"/product\")\n      //   .then((res) => setProducts(res.data))\n      //   .catch((error) => console.log(error));\n      setProducts(PRODUCT_LIST);\n    }\n    // eslint-disable-next-line\n  }, []);\n  const addToCart = product => {\n    swal(\"Product was added to cart\");\n    product[\"quantity\"] = 1;\n    cart_data_success(product);\n    console.log(\"current cart \" + JSON.stringify(store.getState().cart));\n    // MasterAPI()\n    //   .post(\"/cart/add\", { products: [{ id: product._id, quantity: 1 }] })\n    //   .then((res) => {\n    //     swal(\"Product was added to cart\");\n    //     fetch_cart_data_success(res.data.cart);\n    //   })\n    //   .catch((err) =>\n    //     swal(\n    //       \"Product was not added to the cart, you must be authenticated and the product must have enough stock\"\n    //     )\n    //   );\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 6,\n        children: products.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 4,\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.cardMedia,\n              image: product.image,\n              title: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContent,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"subtitle2\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" \", product.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: product.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                size: \"small\",\n                label: `Rs ${product.price}`,\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                size: \"small\",\n                icon: /*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 29\n                }, this),\n                label: product.category,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                variant: \"outlined\",\n                onClick: () => navigate(`/${product._id}`),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addToCart(product),\n                size: \"small\",\n                color: \"primary\",\n                variant: \"contained\",\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n_s(Index, \"Xji7z6xp1+wik6XLt1TXb4Zw0PQ=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = Index;\nconst mapDispatchToProps = dispatch => {\n  return {\n    cart_data_success: data => dispatch(cart_data_success(data))\n  };\n};\nexport default connect(null, mapDispatchToProps)(Index);\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Typography","makeStyles","useNavigate","Chip","CategoryIcon","swal","connect","MasterAPI","cart_data_success","PRODUCT_LIST","store","jsxDEV","_jsxDEV","useStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","gridGap","Index","_ref","_s","oldProducts","fetch_cart_data_success","classes","navigate","products","setProducts","addToCart","product","console","log","JSON","stringify","getState","cart","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","item","xs","sm","md","elevation","className","image","title","name","gutterBottom","variant","description","size","label","price","color","icon","category","onClick","_id","_c","mapDispatchToProps","dispatch","data","$RefreshReg$"],"sources":["C:/3.2/projects/HerbalManagement/wso2_project/frontend/herbify/src/pages/product/productsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport swal from \"sweetalert\";\r\nimport { connect } from \"react-redux\";\r\nimport MasterAPI from \"../../utill/Api\";\r\nimport {cart_data_success} from '../../redux';\r\nimport {PRODUCT_LIST} from '../../utill/AppConstant';\r\nimport store from \"../../redux/store\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    cardMedia: {\r\n      paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gridGap: \"10px\",\r\n    },\r\n  }));\r\n  \r\n  function Index({ oldProducts, fetch_cart_data_success }) {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const [products, setProducts] = useState(oldProducts ? oldProducts : []);\r\n  \r\n    useEffect(() => {\r\n      if (!oldProducts) {\r\n        // MasterAPI()\r\n        //   .get(\"/product\")\r\n        //   .then((res) => setProducts(res.data))\r\n        //   .catch((error) => console.log(error));\r\n        setProducts(PRODUCT_LIST);\r\n      }\r\n      // eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const addToCart = (product) => {\r\n      swal(\"Product was added to cart\");\r\n      product[\"quantity\"] = 1;\r\n      cart_data_success(product);\r\n      console.log(\"current cart \"+JSON.stringify(store.getState().cart))\r\n      // MasterAPI()\r\n      //   .post(\"/cart/add\", { products: [{ id: product._id, quantity: 1 }] })\r\n      //   .then((res) => {\r\n      //     swal(\"Product was added to cart\");\r\n      //     fetch_cart_data_success(res.data.cart);\r\n      //   })\r\n      //   .catch((err) =>\r\n      //     swal(\r\n      //       \"Product was not added to the cart, you must be authenticated and the product must have enough stock\"\r\n      //     )\r\n      //   );\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <main>\r\n          <Grid container spacing={6}>\r\n            {products.map((product) => (\r\n              <Grid item key={product._id} xs={12} sm={4} md={3}>\r\n                <Card elevation={4} className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={product.image}\r\n                    title={product.name}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"subtitle2\">\r\n                      <b> {product.name}</b>\r\n                    </Typography>\r\n                    <Typography variant=\"caption\">\r\n                      {product.description}\r\n                    </Typography>\r\n                    <Chip\r\n                      size=\"small\"\r\n                      label={`Rs ${product.price}`}\r\n                      color=\"secondary\"\r\n                    />\r\n                    <Chip\r\n                      size=\"small\"\r\n                      icon={<CategoryIcon />}\r\n                      label={product.category}\r\n                      color=\"primary\"\r\n                    />\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => navigate(`/${product._id}`)}\r\n                    >\r\n                      View\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => addToCart(product)}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Add to cart\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      cart_data_success: (data) => dispatch(cart_data_success(data)),\r\n    };\r\n  };\r\n  \r\n  export default connect(null, mapDispatchToProps)(Index);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}